{"ast":null,"code":"\"use strict\";\n\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  Object.defineProperty(o, k2, {\n    enumerable: true,\n    get: function () {\n      return m[k];\n    }\n  });\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\n\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\n\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n\n  __setModuleDefault(result, mod);\n\n  return result;\n};\n\nvar __exportStar = this && this.__exportStar || function (m, exports) {\n  for (var p in m) if (p !== \"default\" && !exports.hasOwnProperty(p)) __createBinding(exports, m, p);\n};\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.formatError = exports.parseRpcError = void 0;\n\nconst mustache_1 = __importDefault(require(\"mustache\"));\n\nconst rpc_error_schema_json_1 = __importDefault(require(\"../generated/rpc_error_schema.json\"));\n\nconst error_messages_json_1 = __importDefault(require(\"../res/error_messages.json\"));\n\nconst CLASSMAP = __importStar(require(\"../generated/rpc_error_types\"));\n\n__exportStar(require(\"../generated/rpc_error_types\"), exports);\n\nfunction parseRpcError(errorObj) {\n  const result = {};\n  const errorClassName = walkSubtype(errorObj, rpc_error_schema_json_1.default.schema, result, ''); // NOTE: This assumes that all errors extend TypedError\n\n  const error = new CLASSMAP[errorClassName](formatError(errorClassName, result), errorClassName);\n  Object.assign(error, result);\n  return error;\n}\n\nexports.parseRpcError = parseRpcError;\n\nfunction formatError(errorClassName, errorData) {\n  if (typeof error_messages_json_1.default[errorClassName] === 'string') {\n    return mustache_1.default.render(error_messages_json_1.default[errorClassName], errorData);\n  }\n\n  return JSON.stringify(errorData);\n}\n\nexports.formatError = formatError;\n/**\n * Walks through defined schema returning error(s) recursively\n * @param errorObj The error to be parsed\n * @param schema A defined schema in JSON mapping to the RPC errors\n * @param result An object used in recursion or called directly\n * @param typeName The human-readable error type name as defined in the JSON mapping\n */\n\nfunction walkSubtype(errorObj, schema, result, typeName) {\n  let error;\n  let type;\n  let errorTypeName;\n\n  for (const errorName in schema) {\n    if (isString(errorObj[errorName])) {\n      // Return early if error type is in a schema\n      return errorObj[errorName];\n    }\n\n    if (isObject(errorObj[errorName])) {\n      error = errorObj[errorName];\n      type = schema[errorName];\n      errorTypeName = errorName;\n    } else if (isObject(errorObj.kind) && isObject(errorObj.kind[errorName])) {\n      error = errorObj.kind[errorName];\n      type = schema[errorName];\n      errorTypeName = errorName;\n    } else {\n      continue;\n    }\n  }\n\n  if (error && type) {\n    for (const prop of Object.keys(type.props)) {\n      result[prop] = error[prop];\n    }\n\n    return walkSubtype(error, schema, result, errorTypeName);\n  } else {\n    return typeName;\n  }\n}\n/**\n * Helper function determining if the argument is an object\n * @param n Value to check\n */\n\n\nfunction isObject(n) {\n  return Object.prototype.toString.call(n) === '[object Object]';\n}\n/**\n * Helper function determining if the argument is a string\n * @param n Value to check\n */\n\n\nfunction isString(n) {\n  return Object.prototype.toString.call(n) === '[object String]';\n}","map":{"version":3,"sources":["/Users/Julie/near/digital-war/frontend/node_modules/near-api-js/lib/utils/rpc_errors.js"],"names":["__createBinding","Object","create","o","m","k","k2","undefined","defineProperty","enumerable","get","__setModuleDefault","v","value","__importStar","mod","__esModule","result","hasOwnProperty","call","__exportStar","exports","p","__importDefault","formatError","parseRpcError","mustache_1","require","rpc_error_schema_json_1","error_messages_json_1","CLASSMAP","errorObj","errorClassName","walkSubtype","default","schema","error","assign","errorData","render","JSON","stringify","typeName","type","errorTypeName","errorName","isString","isObject","kind","prop","keys","props","n","prototype","toString"],"mappings":"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","sourcesContent":["\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !exports.hasOwnProperty(p)) __createBinding(exports, m, p);\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.formatError = exports.parseRpcError = void 0;\nconst mustache_1 = __importDefault(require(\"mustache\"));\nconst rpc_error_schema_json_1 = __importDefault(require(\"../generated/rpc_error_schema.json\"));\nconst error_messages_json_1 = __importDefault(require(\"../res/error_messages.json\"));\nconst CLASSMAP = __importStar(require(\"../generated/rpc_error_types\"));\n__exportStar(require(\"../generated/rpc_error_types\"), exports);\nfunction parseRpcError(errorObj) {\n    const result = {};\n    const errorClassName = walkSubtype(errorObj, rpc_error_schema_json_1.default.schema, result, '');\n    // NOTE: This assumes that all errors extend TypedError\n    const error = new CLASSMAP[errorClassName](formatError(errorClassName, result), errorClassName);\n    Object.assign(error, result);\n    return error;\n}\nexports.parseRpcError = parseRpcError;\nfunction formatError(errorClassName, errorData) {\n    if (typeof error_messages_json_1.default[errorClassName] === 'string') {\n        return mustache_1.default.render(error_messages_json_1.default[errorClassName], errorData);\n    }\n    return JSON.stringify(errorData);\n}\nexports.formatError = formatError;\n/**\n * Walks through defined schema returning error(s) recursively\n * @param errorObj The error to be parsed\n * @param schema A defined schema in JSON mapping to the RPC errors\n * @param result An object used in recursion or called directly\n * @param typeName The human-readable error type name as defined in the JSON mapping\n */\nfunction walkSubtype(errorObj, schema, result, typeName) {\n    let error;\n    let type;\n    let errorTypeName;\n    for (const errorName in schema) {\n        if (isString(errorObj[errorName])) {\n            // Return early if error type is in a schema\n            return errorObj[errorName];\n        }\n        if (isObject(errorObj[errorName])) {\n            error = errorObj[errorName];\n            type = schema[errorName];\n            errorTypeName = errorName;\n        }\n        else if (isObject(errorObj.kind) && isObject(errorObj.kind[errorName])) {\n            error = errorObj.kind[errorName];\n            type = schema[errorName];\n            errorTypeName = errorName;\n        }\n        else {\n            continue;\n        }\n    }\n    if (error && type) {\n        for (const prop of Object.keys(type.props)) {\n            result[prop] = error[prop];\n        }\n        return walkSubtype(error, schema, result, errorTypeName);\n    }\n    else {\n        return typeName;\n    }\n}\n/**\n * Helper function determining if the argument is an object\n * @param n Value to check\n */\nfunction isObject(n) {\n    return Object.prototype.toString.call(n) === '[object Object]';\n}\n/**\n * Helper function determining if the argument is a string\n * @param n Value to check\n */\nfunction isString(n) {\n    return Object.prototype.toString.call(n) === '[object String]';\n}\n"]},"metadata":{},"sourceType":"script"}